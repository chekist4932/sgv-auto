version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    ports:
      - ${APP_PORT}:${APP_PORT}
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
      - APP_NAME=${APP_NAME}
      - APP_IP=${APP_IP}
      - APP_PORT=${APP_PORT}
      - APP_PATH=${APP_PATH}
      - PROXY_HEADERS=${PROXY_HEADERS}
      - RELOAD=${RELOAD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}

      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_REGION_NAME=${S3_REGION_NAME}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}

      - TOKEN=${TOKEN}
      - CHAT_ID=${CHAT_ID}

    depends_on:
      - db_postgresql
      - minio
    networks:
      - app_network

  db_postgresql:
    image: postgres:16-alpine
    container_name: db_postgresql
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${DB_PORT}:${DB_PORT}
    networks:
      - app_network

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    volumes:
      - minio_data:/data
      - ./minio/scripts/init_minio.sh:/scripts/init_minio.sh:ro
      - ./minio/minio_policy.json:/scripts/minio_policy.json:ro
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY}
      - MINIO_DEFAULT_BUCKETS=${S3_BUCKET_NAME}
      - MINIO_CONSOLE_USER=minio
      - MINIO_CONSOLE_PASSWORD=minio123
      - S3_PORT=${S3_PORT}
      - S3_CONSOLE_PORT=${S3_CONSOLE_PORT}
    # expose:
    #   - ${S3_PORT}
    ports:
      - ${S3_PORT}:${S3_PORT}
      - ${S3_CONSOLE_PORT}:${S3_CONSOLE_PORT}
    entrypoint: [ "/bin/sh", "/scripts/init_minio.sh" ]
    depends_on:
      - db_postgresql
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend-sgv
      dockerfile: Dockerfile
      args:
        - VITE_APP_API_URL=${VITE_APP_API_URL}
        - VITE_APP_PORT=${VITE_APP_PORT}
    container_name: frontend
    restart: always
    ports:
      - ${VITE_APP_PORT}:${VITE_APP_PORT}
    depends_on:
      - db_postgresql
      - minio
      - backend
    networks:
      - app_network

  proxy-nginx:
    image: nginx:stable-alpine
    container_name: proxy-nginx
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/conf.d/default.conf:ro
      # - ./nginx/sgv-auto.ru.conf:/etc/nginx/sites-available/sgv-auto.ru:ro

      - /etc/letsencrypt/live/sgv-auto.ru:/etc/letsencrypt/live/sgv-auto.ru:ro
      - /etc/letsencrypt/archive/sgv-auto.ru:/etc/letsencrypt/archive/sgv-auto.ru:ro
      - /etc/letsencrypt/renewal/sgv-auto.ru.conf:/etc/letsencrypt/renewal/sgv-auto.ru.conf:ro
    ports:
      - "80:80" # Локальная проверка без SSL
      - "443:443"
    restart: always
    depends_on:
      - db_postgresql
      - minio
      - backend
      - frontend
    networks:
      - app_network


volumes:
  postgres_data:
  minio_data:


networks:
  app_network:
